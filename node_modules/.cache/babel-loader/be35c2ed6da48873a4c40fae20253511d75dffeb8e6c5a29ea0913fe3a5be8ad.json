{"ast":null,"code":"var _jsxFileName = \"/Users/onuryilmaz/Desktop/Workspace/Tokyay/Business/WEB/blackdawn/web/src/components/Newsletter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm } from \"react-hook-form\";\nimport newsletter from \"./../util/newsletter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Newsletter(props) {\n  _s();\n  const [subscribed, setSubscribed] = useState(false);\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n  const onSubmit = _ref => {\n    let {\n      email\n    } = _ref;\n    setSubscribed(true);\n    // Parent component can optionally\n    // find out when subscribed.\n    props.onSubscribed && props.onSubscribed();\n    // Subscribe them\n    newsletter.subscribe({\n      email\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [subscribed === false && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            type: \"email\",\n            label: \"Email\",\n            name: \"email\",\n            error: errors.email ? true : false,\n            helperText: errors.email && errors.email.message,\n            fullWidth: true,\n            inputRef: register({\n              required: \"Please enter an email address\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"stretch\",\n          clone: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: props.buttonColor,\n              size: \"large\",\n              type: \"submit\",\n              children: props.buttonText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), subscribed === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.subscribedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true);\n}\n_s(Newsletter, \"pYKMtDnVPyQov/Np0G04mhnQUf0=\", false, function () {\n  return [useForm];\n});\n_c = Newsletter;\nexport default Newsletter;\nvar _c;\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"names":["React","useState","Grid","TextField","Box","Button","useForm","newsletter","Newsletter","props","subscribed","setSubscribed","handleSubmit","register","errors","onSubmit","email","onSubscribed","subscribe","message","required","buttonColor","buttonText","subscribedMessage"],"sources":["/Users/onuryilmaz/Desktop/Workspace/Tokyay/Business/WEB/blackdawn/web/src/components/Newsletter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm } from \"react-hook-form\";\nimport newsletter from \"./../util/newsletter\";\n\nfunction Newsletter(props) {\n  const [subscribed, setSubscribed] = useState(false);\n\n  const { handleSubmit, register, errors } = useForm();\n\n  const onSubmit = ({ email }) => {\n    setSubscribed(true);\n    // Parent component can optionally\n    // find out when subscribed.\n    props.onSubscribed && props.onSubscribed();\n    // Subscribe them\n    newsletter.subscribe({ email });\n  };\n\n  return (\n    <>\n      {subscribed === false && (\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Grid container={true} spacing={2}>\n            <Grid item={true} xs={true}>\n              <TextField\n                variant=\"outlined\"\n                type=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                error={errors.email ? true : false}\n                helperText={errors.email && errors.email.message}\n                fullWidth={true}\n                inputRef={register({\n                  required: \"Please enter an email address\",\n                })}\n              />\n            </Grid>\n            <Box display=\"flex\" alignItems=\"stretch\" clone={true}>\n              <Grid item={true} xs=\"auto\">\n                <Button\n                  variant=\"contained\"\n                  color={props.buttonColor}\n                  size=\"large\"\n                  type=\"submit\"\n                >\n                  {props.buttonText}\n                </Button>\n              </Grid>\n            </Box>\n          </Grid>\n        </form>\n      )}\n\n      {subscribed === true && <div>{props.subscribedMessage}</div>}\n    </>\n  );\n}\n\nexport default Newsletter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,GAAG,MAAM,uBAAuB;AACvC,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,UAAU,MAAM,sBAAsB;AAAC;AAAA;AAE9C,SAASC,UAAU,CAACC,KAAK,EAAE;EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM;IAAEW,YAAY;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAGR,OAAO,EAAE;EAEpD,MAAMS,QAAQ,GAAG,QAAe;IAAA,IAAd;MAAEC;IAAM,CAAC;IACzBL,aAAa,CAAC,IAAI,CAAC;IACnB;IACA;IACAF,KAAK,CAACQ,YAAY,IAAIR,KAAK,CAACQ,YAAY,EAAE;IAC1C;IACAV,UAAU,CAACW,SAAS,CAAC;MAAEF;IAAM,CAAC,CAAC;EACjC,CAAC;EAED,oBACE;IAAA,WACGN,UAAU,KAAK,KAAK,iBACnB;MAAM,QAAQ,EAAEE,YAAY,CAACG,QAAQ,CAAE;MAAA,uBACrC,QAAC,IAAI;QAAC,SAAS,EAAE,IAAK;QAAC,OAAO,EAAE,CAAE;QAAA,wBAChC,QAAC,IAAI;UAAC,IAAI,EAAE,IAAK;UAAC,EAAE,EAAE,IAAK;UAAA,uBACzB,QAAC,SAAS;YACR,OAAO,EAAC,UAAU;YAClB,IAAI,EAAC,OAAO;YACZ,KAAK,EAAC,OAAO;YACb,IAAI,EAAC,OAAO;YACZ,KAAK,EAAED,MAAM,CAACE,KAAK,GAAG,IAAI,GAAG,KAAM;YACnC,UAAU,EAAEF,MAAM,CAACE,KAAK,IAAIF,MAAM,CAACE,KAAK,CAACG,OAAQ;YACjD,SAAS,EAAE,IAAK;YAChB,QAAQ,EAAEN,QAAQ,CAAC;cACjBO,QAAQ,EAAE;YACZ,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA;QACH;UAAA;UAAA;UAAA;QAAA,QACG,eACP,QAAC,GAAG;UAAC,OAAO,EAAC,MAAM;UAAC,UAAU,EAAC,SAAS;UAAC,KAAK,EAAE,IAAK;UAAA,uBACnD,QAAC,IAAI;YAAC,IAAI,EAAE,IAAK;YAAC,EAAE,EAAC,MAAM;YAAA,uBACzB,QAAC,MAAM;cACL,OAAO,EAAC,WAAW;cACnB,KAAK,EAAEX,KAAK,CAACY,WAAY;cACzB,IAAI,EAAC,OAAO;cACZ,IAAI,EAAC,QAAQ;cAAA,UAEZZ,KAAK,CAACa;YAAU;cAAA;cAAA;cAAA;YAAA;UACV;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA,QACH;MAAA;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,QAEV,EAEAZ,UAAU,KAAK,IAAI,iBAAI;MAAA,UAAMD,KAAK,CAACc;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA,gBAC3D;AAEP;AAAC,GApDQf,UAAU;EAAA,QAG0BF,OAAO;AAAA;AAAA,KAH3CE,UAAU;AAsDnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}