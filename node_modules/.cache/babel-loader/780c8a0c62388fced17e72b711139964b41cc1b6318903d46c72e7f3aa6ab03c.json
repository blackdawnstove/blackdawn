{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\n\n// Make an API request to `/api/{path}`\nexport function apiRequest(path) {\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n  let data = arguments.length > 2 ? arguments[2] : undefined;\n  return fetch(`/api/${path}`, {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: data ? JSON.stringify(data) : undefined\n  }).then(response => response.json()).then(response => {\n    if (response.status === \"error\") {\n      throw new CustomError(response.code, response.message);\n    } else {\n      return response.data;\n    }\n  });\n}\n\n// Make an API request to any external URL\nexport function apiRequestExternal(url) {\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n  let data = arguments.length > 2 ? arguments[2] : undefined;\n  return fetch(url, {\n    method: method,\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: data ? JSON.stringify(data) : undefined\n  }).then(response => response.json());\n}\n\n// Create an Error with custom message and code\nexport function CustomError(code, message) {\n  const error = new Error(message);\n  error.code = code;\n  return error;\n}\n\n// Hook that returns previous value of state\n_c = CustomError;\nexport function usePrevious(state) {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = state;\n  });\n  return ref.current;\n}\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nvar _c;\n$RefreshReg$(_c, \"CustomError\");","map":{"version":3,"names":["useRef","useEffect","apiRequest","path","method","data","fetch","headers","body","JSON","stringify","undefined","then","response","json","status","CustomError","code","message","apiRequestExternal","url","accept","error","Error","usePrevious","state","ref","current"],"sources":["/Users/onuryilmaz/Desktop/Workspace/Tokyay/Business/WEB/blackdawn/web/src/util/util.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\n\n// Make an API request to `/api/{path}`\nexport function apiRequest(path, method = \"GET\", data) {\n  return fetch(`/api/${path}`, {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: data ? JSON.stringify(data) : undefined,\n  })\n    .then((response) => response.json())\n    .then((response) => {\n      if (response.status === \"error\") {\n        throw new CustomError(response.code, response.message);\n      } else {\n        return response.data;\n      }\n    });\n}\n\n// Make an API request to any external URL\nexport function apiRequestExternal(url, method = \"GET\", data) {\n  return fetch(url, {\n    method: method,\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: data ? JSON.stringify(data) : undefined,\n  }).then((response) => response.json());\n}\n\n// Create an Error with custom message and code\nexport function CustomError(code, message) {\n  const error = new Error(message);\n  error.code = code;\n  return error;\n}\n\n// Hook that returns previous value of state\nexport function usePrevious(state) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = state;\n  });\n  return ref.current;\n}\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;;AAEzC;AACA,OAAO,SAASC,UAAU,CAACC,IAAI,EAAwB;EAAA,IAAtBC,MAAM,uEAAG,KAAK;EAAA,IAAEC,IAAI;EACnD,OAAOC,KAAK,CAAE,QAAOH,IAAK,EAAC,EAAE;IAC3BC,MAAM,EAAEA,MAAM;IACdG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEH,IAAI,GAAGI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,GAAGM;EACtC,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAIA,QAAQ,CAACE,MAAM,KAAK,OAAO,EAAE;MAC/B,MAAM,IAAIC,WAAW,CAACH,QAAQ,CAACI,IAAI,EAAEJ,QAAQ,CAACK,OAAO,CAAC;IACxD,CAAC,MAAM;MACL,OAAOL,QAAQ,CAACR,IAAI;IACtB;EACF,CAAC,CAAC;AACN;;AAEA;AACA,OAAO,SAASc,kBAAkB,CAACC,GAAG,EAAwB;EAAA,IAAtBhB,MAAM,uEAAG,KAAK;EAAA,IAAEC,IAAI;EAC1D,OAAOC,KAAK,CAACc,GAAG,EAAE;IAChBhB,MAAM,EAAEA,MAAM;IACdG,OAAO,EAAE;MACPc,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDb,IAAI,EAAEH,IAAI,GAAGI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,GAAGM;EACtC,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC;AACxC;;AAEA;AACA,OAAO,SAASE,WAAW,CAACC,IAAI,EAAEC,OAAO,EAAE;EACzC,MAAMI,KAAK,GAAG,IAAIC,KAAK,CAACL,OAAO,CAAC;EAChCI,KAAK,CAACL,IAAI,GAAGA,IAAI;EACjB,OAAOK,KAAK;AACd;;AAEA;AAAA,KANgBN,WAAW;AAO3B,OAAO,SAASQ,WAAW,CAACC,KAAK,EAAE;EAAA;EACjC,MAAMC,GAAG,GAAG1B,MAAM,EAAE;EACpBC,SAAS,CAAC,MAAM;IACdyB,GAAG,CAACC,OAAO,GAAGF,KAAK;EACrB,CAAC,CAAC;EACF,OAAOC,GAAG,CAACC,OAAO;AACpB;AAAC,GANeH,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}