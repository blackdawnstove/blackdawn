{"ast":null,"code":"import _slicedToArray from\"/Users/onuryilmaz/Desktop/Workspace/Tokyay/Business/WEB/blackdawn/web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import Grid from\"@material-ui/core/Grid\";import TextField from\"@material-ui/core/TextField\";import Box from\"@material-ui/core/Box\";import Button from\"@material-ui/core/Button\";import{useForm}from\"react-hook-form\";import newsletter from\"./../util/newsletter\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Newsletter(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),subscribed=_useState2[0],setSubscribed=_useState2[1];var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,register=_useForm.register,errors=_useForm.errors;var onSubmit=function onSubmit(_ref){var email=_ref.email;setSubscribed(true);// Parent component can optionally\n// find out when subscribed.\nprops.onSubscribed&&props.onSubscribed();// Subscribe them\nnewsletter.subscribe({email:email});};return/*#__PURE__*/_jsxs(_Fragment,{children:[subscribed===false&&/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit(onSubmit),children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:true,children:/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",type:\"email\",label:\"Email\",name:\"email\",error:errors.email?true:false,helperText:errors.email&&errors.email.message,fullWidth:true,inputRef:register({required:\"Please enter an email address\"})})}),/*#__PURE__*/_jsx(Box,{display:\"flex\",alignItems:\"stretch\",clone:true,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:\"auto\",children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:props.buttonColor,size:\"large\",type:\"submit\",children:props.buttonText})})})]})}),subscribed===true&&/*#__PURE__*/_jsx(\"div\",{children:props.subscribedMessage})]});}export default Newsletter;","map":{"version":3,"names":["React","useState","Grid","TextField","Box","Button","useForm","newsletter","Newsletter","props","subscribed","setSubscribed","handleSubmit","register","errors","onSubmit","email","onSubscribed","subscribe","message","required","buttonColor","buttonText","subscribedMessage"],"sources":["/Users/onuryilmaz/Desktop/Workspace/Tokyay/Business/WEB/blackdawn/web/src/components/Newsletter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { useForm } from \"react-hook-form\";\nimport newsletter from \"./../util/newsletter\";\n\nfunction Newsletter(props) {\n  const [subscribed, setSubscribed] = useState(false);\n\n  const { handleSubmit, register, errors } = useForm();\n\n  const onSubmit = ({ email }) => {\n    setSubscribed(true);\n    // Parent component can optionally\n    // find out when subscribed.\n    props.onSubscribed && props.onSubscribed();\n    // Subscribe them\n    newsletter.subscribe({ email });\n  };\n\n  return (\n    <>\n      {subscribed === false && (\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Grid container={true} spacing={2}>\n            <Grid item={true} xs={true}>\n              <TextField\n                variant=\"outlined\"\n                type=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                error={errors.email ? true : false}\n                helperText={errors.email && errors.email.message}\n                fullWidth={true}\n                inputRef={register({\n                  required: \"Please enter an email address\",\n                })}\n              />\n            </Grid>\n            <Box display=\"flex\" alignItems=\"stretch\" clone={true}>\n              <Grid item={true} xs=\"auto\">\n                <Button\n                  variant=\"contained\"\n                  color={props.buttonColor}\n                  size=\"large\"\n                  type=\"submit\"\n                >\n                  {props.buttonText}\n                </Button>\n              </Grid>\n            </Box>\n          </Grid>\n        </form>\n      )}\n\n      {subscribed === true && <div>{props.subscribedMessage}</div>}\n    </>\n  );\n}\n\nexport default Newsletter;\n"],"mappings":"2JAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAOC,KAAI,KAAM,wBAAwB,CACzC,MAAOC,UAAS,KAAM,6BAA6B,CACnD,MAAOC,IAAG,KAAM,uBAAuB,CACvC,MAAOC,OAAM,KAAM,0BAA0B,CAC7C,OAASC,OAAO,KAAQ,iBAAiB,CACzC,MAAOC,WAAU,KAAM,sBAAsB,CAAC,6IAE9C,QAASC,WAAU,CAACC,KAAK,CAAE,CACzB,cAAoCR,QAAQ,CAAC,KAAK,CAAC,wCAA5CS,UAAU,eAAEC,aAAa,eAEhC,aAA2CL,OAAO,EAAE,CAA5CM,YAAY,UAAZA,YAAY,CAAEC,QAAQ,UAARA,QAAQ,CAAEC,MAAM,UAANA,MAAM,CAEtC,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,MAAkB,IAAZC,MAAK,MAALA,KAAK,CACvBL,aAAa,CAAC,IAAI,CAAC,CACnB;AACA;AACAF,KAAK,CAACQ,YAAY,EAAIR,KAAK,CAACQ,YAAY,EAAE,CAC1C;AACAV,UAAU,CAACW,SAAS,CAAC,CAAEF,KAAK,CAALA,KAAM,CAAC,CAAC,CACjC,CAAC,CAED,mBACE,2BACGN,UAAU,GAAK,KAAK,eACnB,aAAM,QAAQ,CAAEE,YAAY,CAACG,QAAQ,CAAE,uBACrC,MAAC,IAAI,EAAC,SAAS,CAAE,IAAK,CAAC,OAAO,CAAE,CAAE,wBAChC,KAAC,IAAI,EAAC,IAAI,CAAE,IAAK,CAAC,EAAE,CAAE,IAAK,uBACzB,KAAC,SAAS,EACR,OAAO,CAAC,UAAU,CAClB,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,OAAO,CACb,IAAI,CAAC,OAAO,CACZ,KAAK,CAAED,MAAM,CAACE,KAAK,CAAG,IAAI,CAAG,KAAM,CACnC,UAAU,CAAEF,MAAM,CAACE,KAAK,EAAIF,MAAM,CAACE,KAAK,CAACG,OAAQ,CACjD,SAAS,CAAE,IAAK,CAChB,QAAQ,CAAEN,QAAQ,CAAC,CACjBO,QAAQ,CAAE,+BACZ,CAAC,CAAE,EACH,EACG,cACP,KAAC,GAAG,EAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAE,IAAK,uBACnD,KAAC,IAAI,EAAC,IAAI,CAAE,IAAK,CAAC,EAAE,CAAC,MAAM,uBACzB,KAAC,MAAM,EACL,OAAO,CAAC,WAAW,CACnB,KAAK,CAAEX,KAAK,CAACY,WAAY,CACzB,IAAI,CAAC,OAAO,CACZ,IAAI,CAAC,QAAQ,UAEZZ,KAAK,CAACa,UAAU,EACV,EACJ,EACH,GACD,EAEV,CAEAZ,UAAU,GAAK,IAAI,eAAI,qBAAMD,KAAK,CAACc,iBAAiB,EAAO,GAC3D,CAEP,CAEA,cAAef,WAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}