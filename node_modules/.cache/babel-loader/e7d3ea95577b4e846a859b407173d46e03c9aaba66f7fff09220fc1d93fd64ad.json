{"ast":null,"code":"var n = \"function\",\n  t = \"string\",\n  e = \"undefined\",\n  r = \"boolean\",\n  o = \"object\",\n  u = \"array\",\n  i = \"number\",\n  c = \"symbol\",\n  f = \"null\",\n  a = \"error\",\n  s = \"typeError\",\n  l = \"syntaxError\",\n  d = \"asyncFunction\",\n  p = \"generatorFunction\",\n  y = \"asyncGeneratorFunction\",\n  b = function b() {},\n  g = \"any\",\n  m = \"*\",\n  v = \"none\",\n  h = \"hidden\",\n  j = \"__\",\n  O = \"form\",\n  S = \"input\",\n  w = \"button\",\n  A = \"select\",\n  E = \"change\",\n  N = \"submit\",\n  D = /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)$/,\n  z = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n  Z = /^\\{[\\s\\S]*\\}$|^\\[[\\s\\S]*\\]$/,\n  F = \"undefined\" != typeof process ? process : {},\n  P = F.env && F.env.NODE_ENV || \"\",\n  x = \"production\" === P,\n  C = \"staging\" === P,\n  L = \"development\" === P,\n  $ = \"undefined\" != typeof window,\n  T = $ && \"localhost\" === window.location.hostname,\n  _ = null != F.versions && null != F.versions.node,\n  k = \"undefined\" != typeof Deno && void 0 !== Deno.core,\n  B = \"object\" == typeof self && self.constructor && \"DedicatedWorkerGlobalScope\" === self.constructor.name,\n  G = $ && \"nodejs\" === window.name || \"undefined\" != typeof navigator && (navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\"));\nfunction M(n, t) {\n  return t.charAt(0)[n]() + t.slice(1);\n}\nvar U = M.bind(null, \"toUpperCase\"),\n  H = M.bind(null, \"toLowerCase\");\nfunction J(n) {\n  return Y(n) ? U(\"null\") : \"object\" == typeof n ? yn(n) : Object.prototype.toString.call(n).slice(8, -1);\n}\nfunction R(n, t) {\n  void 0 === t && (t = !0);\n  var e = J(n);\n  return t ? H(e) : e;\n}\nfunction V(n, t) {\n  return typeof t === n;\n}\nvar W = V.bind(null, \"function\"),\n  q = V.bind(null, \"string\"),\n  I = V.bind(null, \"undefined\");\nfunction K(n) {\n  return !I(n);\n}\nvar Q = V.bind(null, \"boolean\"),\n  X = V.bind(null, \"symbol\");\nfunction Y(n) {\n  return null === n;\n}\nfunction nn(n) {\n  return \"number\" === R(n) && !isNaN(n);\n}\nfunction tn(n) {\n  return !isNaN(parseFloat(n));\n}\nfunction en(n) {\n  return !!W(n) && /^class /.test(Function.prototype.toString.call(n));\n}\nfunction rn(n) {\n  return \"array\" === R(n);\n}\nfunction on(n) {\n  if (!un(n)) return !1;\n  for (var t = n; null !== Object.getPrototypeOf(t);) t = Object.getPrototypeOf(t);\n  return Object.getPrototypeOf(n) === t;\n}\nfunction un(n) {\n  return n && (\"object\" == typeof n || null !== n);\n}\nfunction cn(n) {\n  if (!q(n) || !Z.test(n)) return !1;\n  try {\n    JSON.parse(n);\n  } catch (n) {\n    return !1;\n  }\n  return !0;\n}\nfunction fn(n) {\n  if (Y(n)) return !0;\n  switch (typeof n) {\n    case \"string\":\n    case \"number\":\n    case \"symbol\":\n    case \"undefined\":\n    case \"boolean\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction an(n, t) {\n  return on(n) && W(n[t]);\n}\nfunction sn(n) {\n  return !!n && !!(!I(Promise) && n instanceof Promise || n.then && W(n.then));\n}\nfunction ln(n) {\n  return un(n) && W(n.throw) && W(n.return) && W(n.next);\n}\nfunction dn(n) {\n  return \"generatorFunction\" === R(n);\n}\nfunction pn(n) {\n  return \"asyncFunction\" === R(n);\n}\nfunction yn(n) {\n  return W(n.constructor) ? n.constructor.name : null;\n}\nfunction bn(n) {\n  return n instanceof Set;\n}\nfunction gn(n) {\n  return n instanceof Map;\n}\nfunction mn(n) {\n  return n instanceof RegExp;\n}\nfunction vn(n) {\n  return !(!n.constructor || !W(n.constructor.isBuffer)) && n.constructor.isBuffer(n);\n}\nfunction hn(n) {\n  return n instanceof Error || q(n.message) && n.constructor && nn(n.constructor.stackTraceLimit);\n}\nfunction jn(n) {\n  return un(n) && q(n.message) && q(n.name);\n}\nfunction On(n, t) {\n  if (\"object\" != typeof t || Y(t)) return !1;\n  if (t instanceof n) return !0;\n  var e = R(new n(\"\"));\n  if (hn(t)) for (; t;) {\n    if (R(t) === e) return !0;\n    t = Object.getPrototypeOf(t);\n  }\n  return !1;\n}\nvar Sn = On.bind(null, TypeError),\n  wn = On.bind(null, SyntaxError);\nfunction An(n) {\n  if (!W(n)) return !1;\n  var t = /{(\\r|\\n|\\s)*}/gm,\n    e = b + \"\";\n  return e === (n.toString().match(t) || [\"\"])[0].replace(t, e);\n}\nfunction En(n) {\n  try {\n    if (nn(n.length) && W(n.callee)) return !0;\n  } catch (n) {\n    if (-1 !== n.message.indexOf(\"callee\")) return !0;\n  }\n  return !1;\n}\nfunction Nn(n) {\n  return !(q(n) && \"false\" === n.toLowerCase() || !n);\n}\nfunction Dn(n) {\n  return !n;\n}\nfunction zn(n) {\n  return !0 === n;\n}\nfunction Zn(n) {\n  return !1 === n;\n}\nfunction Fn(n) {\n  return !(n.length > 320) && z.test(n);\n}\nfunction Pn(n) {\n  return n instanceof Date || W(n.toDateString) && W(n.getDate) && W(n.setDate);\n}\nfunction xn(n) {\n  return D.test(n);\n}\nfunction Cn(n) {\n  return !(!Y(n) && (rn(n) ? n.length : bn(n) || gn(n) ? n.size : on(n) && Object.keys(n).length));\n}\nfunction Ln(n) {\n  return NodeList.prototype.isPrototypeOf(n);\n}\nfunction $n(n, t) {\n  var e = n instanceof Element || n instanceof HTMLDocument;\n  return e && t ? Tn(n, t) : e;\n}\nfunction Tn(n, t) {\n  return void 0 === t && (t = \"\"), n && n.nodeName === t.toUpperCase();\n}\nfunction _n(n) {\n  var t = [].slice.call(arguments, 1);\n  return function () {\n    return n.apply(void 0, [].slice.call(arguments).concat(t));\n  };\n}\nvar kn = _n($n, \"form\"),\n  Bn = _n($n, \"button\"),\n  Gn = _n($n, \"input\"),\n  Mn = _n($n, \"select\");\nfunction Un(n, t) {\n  if (!n || \"hidden\" === getComputedStyle(n).visibility) return !0;\n  for (; n;) {\n    if (null != t && n === t) return !1;\n    if (\"none\" === getComputedStyle(n).display) return !0;\n    n = n.parentElement;\n  }\n  return !1;\n}\nfunction Hn(n) {\n  return n ? rn(n) ? n : [n] : [];\n}\nexport { m as ALL, g as ANY, u as ARRAY, d as ASYNC_FUNCTION, y as ASYNC_GENERATOR_FUNCTION, r as BOOLEAN, w as BUTTON, E as CHANGE, P as ENV, a as ERROR, O as FORM, n as FUNCTION, p as GENERATOR_FUNCTION, h as HIDDEN, S as INPUT, v as NONE, f as NULL, i as NUMBER, o as OBJECT, j as PREFIX, z as REGEX_EMAIL, D as REGEX_ISO, Z as REGEX_JSON, A as SELECT, t as STRING, N as SUBMIT, c as SYMBOL, l as SYNTAX_ERROR, s as TYPE_ERROR, e as UNDEFINED, yn as ctorName, Hn as ensureArray, R as getType, J as getTypeName, En as isArguments, rn as isArray, pn as isAsyncFunction, Q as isBoolean, $ as isBrowser, vn as isBuffer, Bn as isButton, en as isClass, Pn as isDate, K as isDefined, k as isDeno, L as isDev, $n as isElement, Fn as isEmail, Cn as isEmpty, hn as isError, jn as isErrorLike, Zn as isFalse, Dn as isFalsy, kn as isForm, W as isFunction, ln as isGenerator, dn as isGeneratorFunction, Un as isHidden, Gn as isInput, xn as isIsoDate, G as isJsDom, cn as isJson, T as isLocalHost, gn as isMap, an as isMethod, An as isNoOp, _ as isNode, Ln as isNodeList, Tn as isNodeType, Y as isNull, nn as isNumber, tn as isNumberLike, on as isObject, un as isObjectLike, fn as isPrimitive, x as isProd, sn as isPromise, mn as isRegex, Mn as isSelect, bn as isSet, C as isStaging, q as isString, X as isSymbol, wn as isSyntaxError, zn as isTrue, Nn as isTruthy, Sn as isTypeError, I as isUndefined, B as isWebWorker, b as noOp };","map":{"version":3,"mappings":"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","names":["FUNCTION","STRING","UNDEFINED","BOOLEAN","OBJECT","ARRAY","NUMBER","SYMBOL","NULL","ERROR","TYPE_ERROR","SYNTAX_ERROR","ASYNC_FUNCTION","GENERATOR_FUNCTION","ASYNC_GENERATOR_FUNCTION","noOp","ANY","ALL","NONE","HIDDEN","PREFIX","FORM","INPUT","BUTTON","SELECT","CHANGE","SUBMIT","REGEX_ISO","REGEX_EMAIL","REGEX_JSON","PROCESS","process","ENV","env","NODE_ENV","isProd","isStaging","isDev","isBrowser","window","isLocalHost","location","hostname","isNode","versions","node","isDeno","Deno","core","isWebWorker","self","constructor","name","isJsDom","navigator","userAgent","includes","text","method","s","charAt","slice","upper","bind","lower","getTypeName","val","isNull","ctorName","Object","prototype","toString","call","getType","toLowerCase","type","typeOf","kind","isFunction","isString","isUndefined","isDefined","x","isBoolean","isSymbol","isNumber","n","isNaN","isNumberLike","parseFloat","isClass","test","Function","isArray","isObject","obj","isObjectLike","proto","getPrototypeOf","isJson","JSON","parse","e","isPrimitive","isMethod","value","prop","isPromise","Promise","then","isGenerator","next","isGeneratorFunction","isAsyncFunction","isSet","Set","isMap","Map","isRegex","RegExp","isBuffer","isError","Error","message","stackTraceLimit","isErrorLike","errorType","ErrKind","typeName","isTypeError","TypeError","isSyntaxError","SyntaxError","isNoOp","func","emptyFunc","noOpStr","match","replace","isArguments","length","callee","err","indexOf","isTruthy","v","isFalsy","isTrue","isFalse","isEmail","isDate","Date","toDateString","getDate","setDate","isIsoDate","isEmpty","size","keys","isNodeList","NodeList","isPrototypeOf","isElement","element","isEl","Element","HTMLDocument","isNodeType","nodeName","toUpperCase","bindArgs","fn","boundArgs","isForm","isButton","isInput","isSelect","isHidden","until","getComputedStyle","visibility","display","parentElement","ensureArray","singleOrArray"],"sources":["/Users/onuryilmaz/Desktop/Workspace/Tokyay/Business/WEB/blackdawn/web/node_modules/@analytics/global-storage-utils/node_modules/@analytics/type-utils/src/index.js"],"sourcesContent":["\n/*\n  Constants for reuse\n*/\n\nexport const FUNCTION = 'function'\nexport const STRING = 'string'\nexport const UNDEFINED = 'undefined'\nexport const BOOLEAN = 'boolean'\nexport const OBJECT = 'object'\nexport const ARRAY = 'array'\nexport const NUMBER = 'number'\nexport const SYMBOL = 'symbol'\nexport const NULL = 'null'\nexport const ERROR = 'error'\nexport const TYPE_ERROR = 'typeError'\nexport const SYNTAX_ERROR = 'syntaxError'\nexport const ASYNC_FUNCTION = 'asyncFunction'\nexport const GENERATOR_FUNCTION = 'generatorFunction'\nexport const ASYNC_GENERATOR_FUNCTION = 'asyncGeneratorFunction'\n\nexport const noOp = () => {}\nexport const ANY = 'any'\nexport const ALL = '*'\nexport const NONE = 'none'\nexport const HIDDEN = 'hidden'\nexport const PREFIX = '__'\n\n/* DOM Constants */\nexport const FORM = 'form'\nexport const INPUT = 'input'\nexport const BUTTON = 'button'\nexport const SELECT = 'select'\nexport const CHANGE = 'change'\nexport const SUBMIT = 'submit'\n\n/* Regex patterns */\nexport const REGEX_ISO = /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)$/\nexport const REGEX_EMAIL = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\nexport const REGEX_JSON = /^\\{[\\s\\S]*\\}$|^\\[[\\s\\S]*\\]$/\n\n/* ────────────────────\nEnvironment checks\n─────────────────────── */\n/** @type {Object} */\nconst PROCESS = typeof process !== UNDEFINED ? process : {}\n\n/** @type {String} */\nexport const ENV = (PROCESS.env && PROCESS.env.NODE_ENV) || ''\n\n/** @type {Boolean} */\nexport const isProd = ENV === 'production'\n\n/** @type {Boolean} */\nexport const isStaging = ENV === 'staging'\n\n/** @type {Boolean} */\nexport const isDev = ENV === 'development'\n\n/** @type {Boolean} */\nexport const isBrowser = typeof window !== UNDEFINED\n/** @type {Boolean} */\nexport const isLocalHost = isBrowser && window.location.hostname === 'localhost'\n\n/** @type {Boolean} */\nexport const isNode = PROCESS.versions != null && PROCESS.versions.node != null\n\n/** @type {Boolean} */\nexport const isDeno = typeof Deno !== UNDEFINED && typeof Deno.core !== UNDEFINED;\n\n/** @type {Boolean} */\nexport const isWebWorker = typeof self === OBJECT && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope'\n\n/** @type {Boolean} */\nexport const isJsDom = (isBrowser && window.name === 'nodejs') || (typeof navigator !== UNDEFINED && (navigator.userAgent.includes('Node.js') || navigator.userAgent.includes('jsdom')))\n\n/* ────────────────────\nType checks\n─────────────────────── */\n\nfunction text(method, s) {\n  return s.charAt(0)[method]() + s.slice(1)\n}\n\nconst upper = text.bind(null, 'toUpperCase')\nconst lower = text.bind(null, 'toLowerCase')\n\n/**\n * Returns the object type of the given payload\n * @param {*} val\n * @returns {string}\n */\nexport function getTypeName(val) {\n  if (isNull(val)) return upper(NULL)\n  return (typeof val === OBJECT) ? ctorName(val) : Object.prototype.toString.call(val).slice(8, -1)\n}\n\n/**\n * Returns the object type of the given payload\n * @param {*} val\n * @returns {string}\n */\nexport function getType(val, toLowerCase = true) {\n  const type = getTypeName(val)\n  // console.log('type', type)\n  return (toLowerCase) ? lower(type) : type\n}\n\n// export function getType(val) {\n//   if (isNull(val)) return NULL\n//   const type = typeof val\n//   if (type === OBJECT) return ctorName(val).toLowerCase()\n//   return type\n// }\n\nfunction typeOf(kind, val) {\n  return typeof val === kind\n}\n\n/** \n * Check if value is function.\n * @param x\n * @return {x is Function}\n */\nexport const isFunction = typeOf.bind(null, FUNCTION)\n\n/** \n * Check if value is string.\n * @param x\n * @return {x is string}\n */\nexport const isString = typeOf.bind(null, STRING)\n\n/** \n * Check if value is undefined.\n * @param x\n * @return {x is undefined}\n */\nexport const isUndefined = typeOf.bind(null, UNDEFINED)\n\n/** \n * Check if value is not undefined.\n * @param x\n * @return {x is undefined}\n */\nexport function isDefined(x) {\n  return !isUndefined(x)\n}\n\n/** \n * @param x\n * @return {x is boolean}\n */\nexport const isBoolean = typeOf.bind(null, BOOLEAN)\n\n/** \n * @param x\n * @return {x is symobl}\n */\nexport const isSymbol = typeOf.bind(null, SYMBOL)\n\n/** \n * @param x\n * @return {x is boolean}\n * @example\n * isNull(null)\n * // true\n */\nexport function isNull(x) {\n  return x === null\n}\n\n/** \n * Check if value is number.\n * @param n\n * @return {boolean}\n * @example\n * > isNumber(0)\n * true\n * > isNumber(1)\n * true\n * > isNumber(1.1)\n * true\n * > isNumber(0xff)\n * true\n * > isNumber(0644)\n * true\n * > isNumber(6.2e5)\n * true\n * > isNumber(NaN)\n * false\n * > isNumber(Infinity)\n * true\n */\nexport function isNumber(n) {\n  return getType(n) === NUMBER && !isNaN(n)\n}\n\nexport function isNumberLike(n) {\n  return !isNaN(parseFloat(n))\n}\n\n/** \n * Check if value is ES2015 `class`.\n * @param x\n * @return {x is Class}\n */\nexport function isClass(x) {\n  if (isFunction(x)) {\n    return /^class /.test(Function.prototype.toString.call(x))\n  }\n  return false\n}\n\n/** \n * @template T\n * @param x\n * @return {x is Array<T>}\n */\nexport function isArray(x) {\n  return getType(x) === ARRAY\n}\n\n/** \n * @param obj\n * @return {obj is Object}\n */\nexport function isObject(obj) {\n  if (!isObjectLike(obj)) return false\n\n  let proto = obj\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto)\n  }\n\n  return Object.getPrototypeOf(obj) === proto\n}\n\nexport function isObjectLike(obj) {\n  return obj && (typeof obj === OBJECT || obj !== null)\n}\n\n/**\n* Tests if a value is a parseable JSON string.\n* @param {*} x - value to test\n* @returns {boolean} boolean indicating if a value is a parseable JSON string\n* @example\n* isJson('{\"a\":5}') // returns true\n* isJson('[]') // returns true\n* isJson('{a\":5}') // returns false\n*/\nexport function isJson(x) {\n  if (!isString(x) || !REGEX_JSON.test(x)) return false\n  try {\n    JSON.parse(x)\n  } catch (e) { \n    return false\n  }\n  return true\n}\n\n/**\n * Is primative scalar value\n * @param x\n * @return {boolean}\n * @example\n   isPrimitive(true) =>  true\n   isPrimitive({}) => false\n   isPrimitive(0) =>  true\n   isPrimitive('1') =>  true\n   isPrimitive(1.1) =>  true\n   isPrimitive(NaN) =>  true\n   isPrimitive(Infinity) =>  true\n   isPrimitive(function() {}) => false\n   isPrimitive(Date), => false\n   isPrimitive(null) =>  true\n   isPrimitive(undefined) =>  true\n */\nexport function isPrimitive(x) {\n  if (isNull(x)) return true\n  // if (isNaN(x)) return false\n  switch (typeof x) {\n    case STRING:\n    case NUMBER:\n    case SYMBOL:\n    case UNDEFINED:\n    case BOOLEAN:\n      return true\n    default:\n      return false\n  }\n}\n\n/**\n* Tests if an object has a specified method name.\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified method name\n* @example\n* const obj = {\n*   key: myFunc,\n*   keyTwo: 'foobar'\n* }\n* isMethod(obj, 'key' ) // returns true\n* isMethod(obj, 'keyTwo' ) // returns false\n* isMethod(obj, 'otherThing' ) // returns false\n*/\nexport function isMethod(value, prop) {\n  return isObject(value) && isFunction(value[prop])\n}\n\n/**\n * Returns true if the input is a Promise.\n * @param {*} x - The input to test\n * @returns {boolean}\n */\nexport function isPromise(x) {\n  if (!x) return false\n  return !!(!isUndefined(Promise) && x instanceof Promise || x.then && isFunction(x.then))\n}\n\n/**\n * Returns true if the input is a generator.\n * @param {*} x - The input to test\n * @returns {boolean}\n */\nexport function isGenerator(x) {\n  return isObjectLike(x) && isFunction(x.throw) && isFunction(x.return) && isFunction(x.next)\n}\n\n/** \n * Is generator function\n * @param x\n * @return {boolean}\n * @example\n   isGeneratorFunction(() => {}) =>  false\n   isGeneratorFunction(function* () => {}) =>  true\n   isGeneratorFunction(function * () {\n     yield 'my-val'\n   }))\n */\nexport function isGeneratorFunction(x) {\n  return getType(x) === GENERATOR_FUNCTION\n}\n\n/** \n * Is async function\n * @param x\n * @return {boolean}\n * @example\n   isAsyncFunction(() => {}) =>  false\n   isAsyncFunction(async () => {}) =>  true\n */\nexport function isAsyncFunction(x) {\n  return getType(x) === ASYNC_FUNCTION\n}\n\n\nexport function ctorName(x) {\n  return isFunction(x.constructor) ? x.constructor.name : null\n}\n\n/**\n * Returns true if the input is a Set.\n * @param {*} x - The input to test\n * @returns {boolean}\n */\nexport function isSet(value) {\n  return value instanceof Set\n}\n\n/**\n * Returns true if the input is a Map.\n * @param {*} x - The input to test\n * @returns {boolean}\n */\nexport function isMap(value) {\n  return value instanceof Map\n}\n\n/**\n * Check if value is regexp\n * @param {*} value - Value to check\n * @return {boolean} \n */\nexport function isRegex(value) {\n  return value instanceof RegExp\n}\n\n/**\n * Check if value is Buffer\n * @param {*} value - Value to check\n * @return {boolean} \n */\nexport function isBuffer(val) {\n  if (val.constructor && isFunction(val.constructor.isBuffer)) {\n    return val.constructor.isBuffer(val)\n  }\n  return false\n}\n\n/**\n * Check if value is Error\n * @param x - Object to check\n * @return {Boolean} If value is error\n * @example\n * isError(new Error()) // True\n */\nexport function isError(x) {\n  return x instanceof Error || (isString(x.message) && x.constructor && isNumber(x.constructor.stackTraceLimit))\n}\n\n/**\n * Check if value error like (i.e has the name and message properties, both of which are strings)\n * @param obj - Object to check\n * @return {Boolean} If object is error-like\n * via https://github.com/Luke-zhang-04/utils/blob/master/src/typeGuards.ts#L62\n * @example\n *\n * ```js\n * isErrorLike(new Error()) // True\n * isErrorLike({name: \"Error!\", message: \"This is an error\", other: 0}) // True\n * isErrorLike({}) // False\n * isErrorLike({name: \"Error\", message: null}) // False\n *\n * // Works as a typguard\n * const something = {name: \"Error\", message: \"This is an error\"} as unknown\n *\n * if (isErrorLike(something)) {\n *   console.log(something.name) // No Typescript error\n * }\n * ```\n */\nexport function isErrorLike(obj) {\n  return isObjectLike(obj) && isString(obj.message) && isString(obj.name)\n}\n\nfunction errorType(ErrKind, value) {\n  if (typeof value !== 'object' || isNull(value)) return false\n  // Check for `TypeError` objects from the same realm (same Node.js `vm` or same `Window` object)...\n  if (value instanceof ErrKind) return true\n  const typeName = getType(new ErrKind(''))\n  // All `TypeError` objects are `Error` objects...\n  if (isError(value)) {\n    while (value) {\n      if (getType(value) === typeName) {\n        return true\n      }\n        value = Object.getPrototypeOf(value)\n    }\n  }\n  return false\n}\n\nexport const isTypeError = errorType.bind(null, TypeError)\n\nexport const isSyntaxError = errorType.bind(null, SyntaxError)\n\n/** \n * @param func - function to check if noOp\n * @return {Boolean} - is noOp\n * @examples\n   function foo() {}\n   isNoOp(foo) // true\n   isNoOp(() => { }) // true\n   isNoOp(() => { console.log('hi') }) // false\n */\nexport function isNoOp(func) {\n  if (!isFunction(func)) return false\n  const emptyFunc = /{(\\r|\\n|\\s)*}/gm\n  const noOpStr = noOp + ''\n  const funcString = (func.toString().match(emptyFunc) || [''])[0].replace(emptyFunc, noOpStr)\n  return noOpStr === funcString\n}\n\n/**\n * Check if value is function arguments\n * @param {*} val \n * @returns \n */\nexport function isArguments(val) {\n  try {\n    if (isNumber(val.length) && isFunction(val.callee)) return true\n  } catch (err) {\n    if (err.message.indexOf('callee') !== -1) return true\n  }\n  return false\n}\n\n/**\n * Check if value is truthy\n * @param {*} value \n * @return {Boolean} - is truthy value\n */\nexport function isTruthy(v) {\n  if (isString(v) && v.toLowerCase() === 'false') return false\n  return !!v\n}\n\n/**\n * Check if value is falsy\n * @param {*} x \n * @return {Boolean} - is falsy value\n * @example\n * isFalsy(false) // returns true\n * isFalsy(null) // returns true\n * isFalsy('') // returns true\n * isFalsy(0) // returns true\n * isFalsy(void 0) // returns true\n * isFalsy(NaN) // returns true\n * isFalsy([]) // returns false\n */\nexport function isFalsy(x) {\n  return x ? false : true\n}\n\n// ^ future updates https://github.com/thenativeweb/boolean\n\n/**\n * Check if value is true\n * @param {*} x \n * @return {Boolean} - is true\n */\nexport function isTrue(x) {\n  return x === true\n}\n\n/**\n * Check if value is true\n * @param {*} x \n * @return {Boolean} - is true\n */\nexport function isFalse(x) {\n  return x === false\n}\n\n/**\n * Check if value is email\n * @param {*} x \n * @return {Boolean} - is email like value\n */\nexport function isEmail(x) {\n  if (x.length > 320) return false\n  return REGEX_EMAIL.test(x)\n}\n\n/**\n * Check if valie is date\n * @param {*} val \n * @returns {Boolean}\n */\nexport function isDate(x) {\n  if (x instanceof Date) return true\n  return isFunction(x.toDateString) && isFunction(x.getDate) && isFunction(x.setDate)\n}\n\n/**\n * Check if value is ISO date e.g. '2022-01-02T06:45:28.547Z'\n * @param {*} x\n * @return {Boolean} - is email like value\n */\nexport function isIsoDate(x) {\n  return REGEX_ISO.test(x)\n}\n\n/**\n * Is value empty\n * @param {*} x \n * @returns {Boolean}\n * @example\n * isEmpty(null)\n *\n * isEmpty([1, 2, 3])\n * // => false\n *\n * isEmpty('abc')\n * // => false\n *\n * isEmpty({ 'a': 1 })\n * // => false\n */\nexport function isEmpty(x) {\n  if (isNull(x)) return true\n  if (isArray(x)) return !x.length\n  if (isSet(x) || isMap(x)) return !x.size\n  if (isObject(x)) return !Object.keys(x).length\n  return true\n}\n\n/* ────────────────────\nHTML Element checks\n─────────────────────── */\n\n/** \n * @param obj\n * @return {obj is NodeList}\n */\nexport function isNodeList(obj) {\n  return NodeList.prototype.isPrototypeOf(obj)\n}\n\n/**\n * Check if input is DOM element\n * @param {HTMLElement|*} element\n * @return {boolean} \n */\nexport function isElement(element, type) {\n  const isEl = element instanceof Element || element instanceof HTMLDocument\n  if (!isEl || !type) return isEl\n  return isNodeType(element, type)\n}\n\n/**\n * Check if element is specific DOMNode type\n * @param {HTMLElement|*} element\n * @param {String} type\n * @return {boolean}\n */\nexport function isNodeType(element, type = '') {\n  return element && element.nodeName === type.toUpperCase()\n}\n\nfunction bindArgs(fn, ...boundArgs) {\n  return function(...args) {\n    return fn(...args, ...boundArgs)\n  }\n}\n\n/**\n * Check if element is form element\n * @param {HTMLElement} element\n * @return {boolean} \n */\nexport const isForm = bindArgs(isElement, FORM)\n\n/**\n * Check if element is button element\n * @param {HTMLElement} element\n * @return {boolean} \n */\nexport const isButton = bindArgs(isElement, BUTTON)\n\n/**\n * Check if element is input element\n * @param {HTMLElement} element\n * @return {boolean} \n */\nexport const isInput = bindArgs(isElement, INPUT)\n\n/**\n * Check if element is select element\n * @param {HTMLElement} element\n * @return {boolean} \n */\nexport const isSelect = bindArgs(isElement, SELECT)\n\n/**\n * Check if DOM element is hidden\n * @param {HTMLElement|null|undefined} element\n * @param {HTMLElement|null|undefined} until\n * @return {boolean}\n */\nexport function isHidden(element, until) {\n  if (!element || getComputedStyle(element).visibility === HIDDEN) return true\n\n  while (element) {\n    if (until != null && element === until) return false\n    if (getComputedStyle(element).display === NONE) return true\n    element = element.parentElement\n  }\n\n  return false\n}\n\n/* ────────────────────\nEnsure Values\n─────────────────────── */\n\n/**\n * Ensure value returned is Array\n * @param {*} singleOrArray \n * @returns [*]\n */\nexport function ensureArray(singleOrArray) {\n  if (!singleOrArray) return []\n  if (isArray(singleOrArray)) return singleOrArray\n  return [singleOrArray]\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}